@page
@model HorseService.Areas.Admin.Pages.Appointment.PaidAppointmentModel
@{
}

<style>
    td {
        text-align: center !important;
    }
</style>


<div class="page-content">
    <div class="container-fluid">

        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h2 class="card-header d-flex justify-content-between align-items-center">
                            @sharedResource["Paid Orders"]

                        </h2>
                    </div>
                        <div style="padding:25px 25px 0px 25px">
                            @sharedResource["Click on is paid checkbox to update status from  paid to Not paid"]
                        </div>
                    <div class="card-body">

                        @(Html.DevExtreme().DataGrid<HorseService.Models.Appointments>()
    .DataSource(ds => ds.Mvc()
        .Controller("Appointments")
        .LoadAction("GetPaid")
        .Key("AppointmentsId")
        .UpdateAction("PutPaidAppo")
        .InsertAction("Post")
        .Key("AppointmentsId")
    )
    .Editing(editing =>
    {
        editing.Mode(GridEditMode.Cell);
        editing.AllowUpdating(true);
        editing.AllowAdding(true);
    })

    .Columns(columns => {

    columns.AddFor(m => m.NumberofHorses).Caption(sharedResource["No. of Horses"]).AllowEditing(false);
    columns.AddFor(m => m.Date).Caption(sharedResource["Date"]).AllowEditing(false);

    columns.AddFor(m => m.TimeFrom).Caption(sharedResource["Time From"]).AllowEditing(false);
    columns.AddFor(m => m.TimeTowill).Caption(sharedResource["Time To Will"]).AllowEditing(false);

    //columns.AddFor(m => m.Closed).Caption(sharedResource["Closed"]);
    columns.AddFor(m => m.CustomerId).Lookup(lookup => lookup
    .DataSource(ds => ds.WebApi().Controller("Lookups").LoadAction("CustomersLookup").Key("Value"))
    .ValueExpr("Value")
    .DisplayExpr("Text")
).Caption(sharedResource["Customer"]).AllowEditing(false);

    columns.AddFor(m => m.EmployeeId).Lookup(lookup => lookup
.DataSource(ds => ds.WebApi().Controller("Lookups").LoadAction("EmployeesLookup").Key("Value"))
.ValueExpr("Value")
.DisplayExpr("Text")
).Caption(sharedResource["Employee"]).AllowEditing(false);

    columns.AddFor(m => m.Cost).Caption(sharedResource["Total"]).AllowEditing(false);
    columns.AddFor(m => m.ispaid).Caption(sharedResource["Is Paid"]);
    @*columns.Add().Caption(sharedResource["Actions"]).Width(200).Alignment(HorizontalAlignment.Center).CellTemplate(@<text>

                        <div class="btn-group" role="group" aria-label="Basic example">
                        <a class="btn btn-primary btn-sm"  href="/Admin/Appointment/AppointmentDetails?id=<%- data.AppointmentsId %>"> <i class="fas fa-eye"></i> </a>
                            </div>
                            </text>);*@
    })
                        .Paging(paging => paging.PageSize(10))
                        .Pager(pager =>
                        {
                            pager.Visible(true);
                            pager.DisplayMode(GridPagerDisplayMode.Full);
                            pager.ShowPageSizeSelector(true);
                            pager.AllowedPageSizes(new JS("[5, 10, 'all']"));
                            pager.ShowInfo(true);
                            pager.ShowNavigationButtons(true);

                        })
                        .HeaderFilter(headerFilter => headerFilter.Visible(true)).ShowColumnLines(true)
                        .ShowRowLines(true)
                        .RowAlternationEnabled(true)
                        .AllowColumnReordering(true)
                        .ShowRowLines(true)
                        .ShowBorders(true)
                        .SearchPanel(searchPanel => searchPanel
                        .Visible(true)
                        .Width(240)
                        .Placeholder(sharedResource["SearchTxt"]))
                        .RemoteOperations(true)
                        .RtlEnabled(bool.Parse(sharedResource["ArLang"]))

                                        )
                        

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
​